// <auto-generated />
using System;
using Calculator.Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Calculator.Backend.Data.Migrations
{
    [DbContext(typeof(CalculatorDataContext))]
    partial class CalculatorDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("Calculator.Backend.Data.Models.Entities.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OperationId")
                        .HasColumnType("uuid");

                    b.Property<float>("Param1")
                        .HasColumnType("real");

                    b.Property<float>("Param2")
                        .HasColumnType("real");

                    b.Property<float>("Result")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("Calculator.Backend.Data.Models.Entities.Operation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sign")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Operations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dda8cb48-312a-4b81-9f5a-cd2d89b9ccd1"),
                            Alias = "SUM",
                            Name = "Sum",
                            Sign = "+"
                        },
                        new
                        {
                            Id = new Guid("5c549d70-f5c6-4732-bf76-99303ccc9aaa"),
                            Alias = "DIFF",
                            Name = "Difference",
                            Sign = "-"
                        });
                });

            modelBuilder.Entity("Calculator.Backend.Data.Models.Entities.History", b =>
                {
                    b.HasOne("Calculator.Backend.Data.Models.Entities.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");
                });
#pragma warning restore 612, 618
        }
    }
}
